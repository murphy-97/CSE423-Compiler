program ~ declarationList
declarationList ~ declarationList declaration | declaration 
declaration ~ varDeclaration | funDeclaration
varDeclaration ~ typeSpecifier varDeclInitialize ;
ParamDeclaration ~ typeSpecifier ID ;
varDeclInitialize ~ ID = simpleExpression
typeSpecifier ~ int | bool | char
funDeclaration ~ typeSpecifier ID ( params ) compoundStmt
params ~ paramList | epsilon
paramList ~ ParamDeclaration , paramList | ParamDeclaration
statement ~ expressionStmt | compoundStmt | selectionStmt | iterationStmt | returnStmt | breakStmt
expressionStmt ~ expression ; | ;
compoundStmt ~ { localDeclarations statementList }
localDeclarations ~ varDeclaration localDeclarations | epsilon
statementList ~ statementList statement | epsilon
elsifList ~ elsifList elsif simpleExpression then statement | epsilon
selectionStmt ~ if ( simpleExpression ) compoundStmt
iterationRange ~ ID = simpleExpression .. simpleExpression | ID = simpleExpression .. simpleExpression : simpleExpression
iterationStmt ~ while ( simpleExpression ) compoundStmt
returnStmt ~ return ; | return expression ;
breakStmt ~ break ;
expression ~ ID = expression | ID += expression | ID -= expression | ID *= expression | ID /= expression | ID %= expression | ID ++ | ID -- | simpleExpression
simpleExpression ~ simpleExpression || andExpression | andExpression
andExpression ~ andExpression && unaryRelExpression | unaryRelExpression
unaryRelExpression ~ !& unaryRelExpression | relExpression
relExpression ~ sumExpression relop sumExpression | sumExpression
relop ~ <= | < | > | >= | == | !=
sumExpression ~ sumExpression sumop mulExpression | mulExpression
sumop ~ + | -
mulExpression ~ mulExpression mulop unaryExpression | unaryExpression
mulop ~ * | / | %
unaryExpression ~ unaryop unaryExpression | factor
unaryop ~ - | * | ?
factor ~ immutable | ID
call~ID(args)
args ~ argList | epsilon
argList ~ argList , expression | expression
constant ~ NUMCONST | FLOATCONST | CHARCONST | STRINGCONST | true | false
